# Vimi

Vim miripiruni's bundle

Please address bugs and your suggestions to [Issues](http://github.com/miripiruni/vimi/issues).

How to
------

Я предпочитаю использовать iTerm2 + Vim + Solarized. Пока .vimrc обкатывался только на этом сетапе.


Install
-------

1. Удалите или переместите текущие ~/.vim и ~/.vimrc если они есть
2. Выполните `cd ~; git clone git://github.com/miripiruni/vimi.git vimi; cp vimi/.vimrc .vimrc; cp -r vimi/.vim .vim`
3. Выполните `git clone git://github.com/gmarik/vundle.git ~/vimi/.vim/bundle/vundle`
4. Теперь запустите vim и, если нужно, отредактируйте список необходимых плагинов в файле .vimrc и выполните инициализацию бандла `:BundleInstall`
5. Перезапустите vim



Hot keys
--------

Я  придерживаюсь принципиального правила ничего не мапить на F-клавиши. Во-первых, у меня
на маке они заняты, во-вторых они слишком далеко.

`,m` в Normal mode включает/выключает поддержку мыши

`,r` Замена во всех открытых буферах

`,f` грепает в текущей директории по слову, на котором стоит курсор

`,p` вкл/выкл режима форматирования кода, который вы будете вставлять из вне

`,n` переключает тип нумерации строк: абсолютный/относительный/нет

`,b` переключает Solarized тему: dark/light

`,g` тогглит менюшки и скроллы GUI

`,n` тогглит NERDTree

`,v` открыть .vimrc в новой табе. Кстати, если .vimrc сохранить все изменения вступтят в силу сразу же.

`,→` новый сплит справа

`,←` новый сплит слева

`,↑` новый сплит сверху

`,↓` новый сплит снизу

`p` или `P` Вставить текст и отформатировать правильные отступы в зависимости от контекста

`Ctrl-s` сохранить файл

`Cmd-w` закрыть текущий буфер (MacVim)

`Ctrl-t` новая таба (MacVim)

`Ctrl-Tab` переместить курсор в следующий сплит

`Alt-Tab` следующий таб

`Alt-Shift-Tab` предыдущий таб

`Space` пролистнуть на страницу вниз (как в браузерах)

`Space-Space` точка и пробел (как в айФоне)

`Return` toggle command mode

`Esc` в Normal mode убирает подсветку найденных совпадений при поиске

`Enter` в Normal mode сбрасывает подсветку найденного текста

`Backspace` Toggle NerdTree

Key mapping for textmate-like indentation:

* `Cmd-[` увеличить
* `Cmd-]` уменьшить

`K` перенести часть строки начиная с курсора в начало следующей строки (split/join)

`gf` открывает в сплите файл по пути, на котором стоит курсор

`gV` выделить последний вставленный текст

Отключаются `Arrow keys` для передвижения курсора. Warning: nightmare mode! Но позволяем передвигаться с помощью `hjkl` в Insert mode зажав `Ctrl`

Перемещение строк:

* `Ctrl-Shift-k` вверх
* `Ctrl-Shift-j` вниз

{действие} от курсора до конца строки:

* `Y` yank
* `D` удалить
* `C` заменить

`:w!!` сохраняет файл как если бы вы открыли его с sudo

